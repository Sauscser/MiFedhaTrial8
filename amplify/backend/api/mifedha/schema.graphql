type SMAccount
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update, create] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, delete, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  {
  nationalid: String! @index(name: "byNatIdentity", sortKeyFields: ["createdAt"], queryField: "VwNatIdentity")
  name: String! 
  phonecontact: String! @index(name: "byPnCntct", sortKeyFields: ["createdAt"], queryField: "VwPnCntct")
  awsemail: String! @primaryKey 
 
  balance: Float!
  p2pchmBenefits:Float!
  pw: String!
  nationality: String!
  MFKubwaCost: Float!
  MFKubwaNetCost: Float!
  MFNdogoDue: Float!
  MFNdogoNet: Float!
  beneficiary:   String!
  beneficiaryAmt:Float!
  loanAcceptanceCode: String!

  ttlDpstSM: Float!
  TtlWthdrwnSM: Float!


  TtlActvLonsTmsLnrCov: Float!
  TtlActvLonsTmsLneeCov: Float!
  TtlActvLonsAmtLnrCov: Float!
  TtlActvLonsAmtLneeCov: Float!
  TtlBLLonsTmsLnrCov: Float!
  TtlBLLonsTmsLneeCov: Float!
  TtlBLLonsAmtLnrCov: Float!
  TtlBLLonsAmtLneeCov: Float!
  TtlClrdLonsTmsLnrCov: Float!
  TtlClrdLonsTmsLneeCov: Float!
  TtlClrdLonsAmtLnrCov: Float!
  TtlClrdLonsAmtLneeCov: Float!
  
  TtlActvLonsTmsLneeChmCov: Float!
  TtlActvLonsAmtLneeChmCov: Float!
  TtlBLLonsTmsLneeChmCov: Float!
  TtlBLLonsAmtLneeChmCov: Float!
  TtlClrdLonsTmsLneeChmCov: Float!
  TtlClrdLonsAmtLneeChmCov: Float!
     
  TtlActvLonsTmsSllrCov: Float!
  TtlActvLonsTmsByrCov: Float!
  TtlActvLonsAmtSllrCov: Float!
  TtlActvLonsAmtByrCov: Float!
  TtlBLLonsTmsSllrCov: Float!
  TtlBLLonsTmsByrCov: Float!
  TtlBLLonsAmtSllrCov: Float!
  TtlBLLonsAmtByrCov: Float!
  TtlClrdLonsTmsSllrCov: Float!
  TtlClrdLonsTmsByrCov: Float!
  TtlClrdLonsAmtSllrCov: Float!
  TtlClrdLonsAmtByrCov: Float!
  

  TtlActvLonsTmsLnrNonCov: Float!
  TtlActvLonsTmsLneeNonCov: Float!
  TtlActvLonsAmtLnrNonCov: Float!
  TtlActvLonsAmtLneeNonCov: Float!
  TtlBLLonsTmsLnrNonCov: Float!
  TtlBLLonsTmsLneeNonCov: Float!
  TtlBLLonsAmtLnrNonCov: Float!
  TtlBLLonsAmtLneeNonCov: Float!
  TtlClrdLonsTmsLnrNonCov: Float!
  TtlClrdLonsTmsLneeNonCov: Float!
  TtlClrdLonsAmtLnrNonCov: Float!
  TtlClrdLonsAmtLneeNonCov: Float!
  
  TtlActvLonsTmsLneeChmNonCov: Float!
  TtlActvLonsAmtLneeChmNonCov: Float!
  TtlBLLonsTmsLneeChmNonCov: Float!
  TtlBLLonsAmtLneeChmNonCov: Float!
  TtlClrdLonsTmsLneeChmNonCov: Float!
  TtlClrdLonsAmtLneeChmNonCov: Float!
  
  TtlActvLonsTmsSllrNonCov: Float!
  TtlActvLonsTmsByrNonCov: Float!
  TtlActvLonsAmtSllrNonCov: Float!
  TtlActvLonsAmtByrNonCov: Float!
  TtlBLLonsTmsSllrNonCov: Float!
  TtlBLLonsTmsByrNonCov: Float!
  TtlBLLonsAmtSllrNonCov: Float!
  TtlBLLonsAmtByrNonCov: Float!
  TtlClrdLonsTmsSllrNonCov: Float!
  TtlClrdLonsTmsByrNonCov: Float!
  TtlClrdLonsAmtSllrNonCov: Float!
  TtlClrdLonsAmtByrNonCov: Float!
  TtlActvLonsTmsLnrCredSlsP2P: Float!
                TtlActvLonsAmtLnrCredSlsP2P: Float!
                TtlBLLonsTmsLnrCredSlsP2P: Float!
                TtlBLLonsAmtLnrCredSlsP2P: Float!
                TtlClrdLonsTmsLnrCredSlsP2P: Float!
                TtlClrdLonsAmtLnrCredSlsP2P: Float!
              
                TtlActvLonsTmsLnrCredSlsP2B: Float!
                TtlActvLonsAmtLnrCredSlsP2B: Float!
                TtlBLLonsTmsLnrCredSlsP2B: Float!
                TtlBLLonsAmtLnrCredSlsP2B: Float!
                TtlClrdLonsTmsLnrCredSlsP2B: Float!
                TtlClrdLonsAmtLnrCredSlsP2B: Float!
              
                TtlActvLonsTmsLneeB2P: Float!
                TtlActvLonsAmtLneeB2P: Float!
                TtlBLLonsTmsLneeB2P: Float!
                TtlBLLonsAmtLneeB2P: Float!
                TtlClrdLonsLneeB2P: Float!
                TtlClrdLonsAmtLneeB2P: Float!
              
                TtlActvLonsTmsLneeP2P: Float!
                TtlActvLonsAmtLneeP2P: Float!
                TtlBLLonsTmsLneeP2P: Float!
                TtlBLLonsAmtLneeP2P: Float!
                TtlClrdLonsLneeP2P: Float!
                TtlClrdLonsAmtLneeP2P: Float!
              
                TtlActvLonsTmsLnrP2P: Float!
                TtlActvLonsAmtLnrP2P: Float!
                TtlBLLonsTmsLnrP2P: Float!
                TtlBLLonsAmtLnrP2P: Float!
                TtlClrdLonsLnrP2P: Float!
                TtlClrdLonsAmtLnrP2P: Float!

  ttlNonLonsRecSM: Float!
  ttlNonLonsSentSM:Float!

  ttlNonLonsRecChm: Float!
  ttlNonLonsSentChm:Float!

  MaxTymsBL: Float!
  MaxTymsIHvBL: Float!

  MaxAcBal: Float!

  TymsIHvGivnLn: Float!
  TymsMyLnClrd: Float!
  
  DefaultPenaltySM: Float!
  loanStatus: Status!
  acStatus: Status!
  deActvtnReason:String!
  blStatus: Status!
  loanLimit: Float!
  nonLonLimit:Float!
  withdrawalLimit: Float!
  depositLimit: Float!
  owner: String! 
  createdAt: String!

}

type SMLoansCovered
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "owner", operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, delete, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
    ]
  )
 
  {
  loanID: String! @primaryKey
  loaneeid: String! 
  loaneePhn: String!  @index(name: "byLneePhn7", sortKeyFields: ["createdAt"], queryField: "VwMyDebts7")
  loanerLoanee:String! @index(name: "byLnrNLneesssss7", sortKeyFields: ["createdAt"], queryField: "VwLnrNLneesssss7")
  loanerLoaneeAdv:String
  loanerPhn:String! @index(name: "byLnerPhn7", sortKeyFields: ["createdAt"], queryField: "VwMyDebtors7")
  advregnu: String
  loanerId: String!  
  amountgiven: Float!
  amountexpected: Float!
  amountExpectedBackWthClrnc: Float!
  dfltUpdate: String
  dfltDeadLn: Float!
  amountrepaid: Float!
  lonBala:Float!
  interest: Float!
  lnType: String!
  loaneename:String!
  loanername:String!
  loanerEmail: String!
  repaymentPeriod: Float!
  DefaultPenaltySM: Float!
  DefaultPenaltySM2: Float!
  timeExpBack: Float!
  crtnDate: Float!
  loaneeEmail: String! @index(name: "byLnerEmail7", sortKeyFields: ["createdAt"], queryField: "VwMyLenders7")
  timeExpBack2: Float!
  description: String
  status: Status!
  owner: String! 
  createdAt: String!
  blOfficer:String!
  advEmail:String
  installmentAmount:Float!
  paymentFrequency:Float!
}

type CovCreditSeller
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  
 
 
  
  
  {
  loanID: String! @primaryKey
  itemName: String!
 interest: Float!
  loanerLoanee:String! @index(name: "byLnrNLneesss7", sortKeyFields: ["createdAt"], queryField: "VwLnrNLneesss7")
  loanerLoaneeAdv:String
  buyerContact: String!  @index(name: "byByrPhn7", sortKeyFields: ["createdAt"], queryField: "VwMyCrdBys7")
  sellerContact: String! @index(name: "bySlrPhn7", sortKeyFields: ["createdAt"], queryField: "VwMySales7")
  buyerID: String!
  advEmail:String
  buyerName:String!
  SellerName:String!
  sellerID: String!
  amountSold: Float!
dfltUpdate: String
lnType: String!
dfltDeadLn: Float!
  amountexpectedBack: Float!
  amountExpectedBackWthClrnc: Float!
  amountRepaid: Float!
  repaymentPeriod: Float!
giverStatus:Status!
  timeExpBack: Float!
  timeExpBack2: Float!
  lonBala:Float!
  crtnDate: Float!
  description: String
  status: Status!
  advregnu: String
  DefaultPenaltyCredSl: Float!
  DefaultPenaltyCredSl2: Float!
  owner: String!
  createdAt: String!
  blOfficer:String!
  installmentAmount:Float!
  paymentFrequency:Float!
}

type CvrdGroupLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  
  
 
 
  
  
  {
  loanID: String! @primaryKey
  grpContact: String! @index(name: "byChmCntctss7", sortKeyFields: ["createdAt"], queryField: "VwChamaMemberss7")
  loaneePhn: String! @index(name: "byMemberCntctss7", sortKeyFields: ["createdAt"], queryField: "VwMyChamass7")
  repaymentPeriod: Float!
  loanerLoanee:String!  @index(name: "byLnrNLnee7", sortKeyFields: ["createdAt"], queryField: "VwLnrNLnee7")
  loanerLoaneeAdv:String
  amountGiven: Float!
  interest: Float!
  advEmail:String
  amountExpectedBack: Float!
  amountExpectedBackWthClrnc: Float!
  amountRepaid: Float!
  description: String
  dfltUpdate: String
  dfltDeadLn: Float!
  lonBala:Float!
  lnType: String!
  memberId:String!
  advRegNu: String
  loaneeName:String!
  LoanerName:String!
  timeExpBack: Float!
  timeExpBack2: Float!
  crtnDate: Float!
  status: Status!
  owner: String!
  DefaultPenaltyChm: Float!
  DefaultPenaltyChm2: Float!
  createdAt: String!
  blOfficer:String!
  installmentAmount:Float!
  paymentFrequency:Float!
}








type NonLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  
  {
  id:ID!
  senderPhn: String! @index(name: "bySendrPhn", sortKeyFields: ["createdAt"], queryField: "VwMySntMny")
  recPhn: String! @index(name: "byRecPhn", sortKeyFields: ["createdAt"], queryField: "VwMyRecMny")
  RecName:String!
  SenderName:String!
  amount: Float!
  
  description: String
  status:Status!
  owner: String!
  createdAt: String!
}

type BizSlsReq
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  
  {
  id:ID!
  senderPhn: String! @index(name: "bySendrPhn7", sortKeyFields: ["createdAt"], queryField: "VwMySntMny7")
  recPhn: String! @index(name: "byRecPhn7", sortKeyFields: ["createdAt"], queryField: "VwMyRecMny7")
  RecName:String!
  SenderName:String!
  amount: Float!
  attendingAdmin:String!
  description: String
  status:Status!
  owner: String!
  createdAt: String!
}

type BizSls
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  
  {
    saleId: String! @primaryKey
  id:ID!
  senderPhn: String! @index(name: "bySendrPhn8", sortKeyFields: ["createdAt"], queryField: "VwMySntMny8")
  recPhn: String! @index(name: "byRecPhn8", sortKeyFields: ["createdAt"], queryField: "VwMyRecMny8")
  RecName:String!
  SenderName:String!
  amount: Float!
  attendingAdmin: String!
  description: String
  status:Status!
  owner: String!
  createdAt: String!
}

type LoanRepayments
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  
  {
  id:ID!
  senderPhn: String! @index(name: "bySendrPhnsxz", sortKeyFields: ["createdAt"], queryField: "VwMySntMnysxz")
  recPhn: String! @index(name: "byRecPhnsxz", sortKeyFields: ["createdAt"], queryField: "VwMyRecMnysxz")
  RecName:String!
  SenderName:String!
  amount: Float!
  loanId1: String
  loanId2: String
  loanId3: String
  description: String
  status:Status!
  owner: String!
  createdAt: String!
}





type SokoAd
  @model
  @auth(
    rules: [
      
      { allow: owner, operations: [read, update, delete] }
      { allow: private, operations: [read, create] }
      
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      ]
  )

  
   {
  
  id:ID! 
  
  sokokntct: String! 
  sokoname: String! @index(name: "DakaName", sortKeyFields: ["createdAt"], queryField: "DakaByName")
 
  sokoprice: Float!
  sokotown: String!
  sokolnprcntg: Float!
  sokolpymntperiod: Float!
  sokodesc: String! 
  
  owner: String! 
  
  createdAt: String!
}




type RafikiLnAd
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update, delete] }
      { allow: private, operations: [read, create] }
      
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      ]
  )

  
   {
  id: ID! 
  rafikiName: String! 
  rafikicntct: String! 
  rafikiEmail: String! 
  AdvEmail: String
  advLicNo: String
  rafikiamnt: Float! 
  defaultPenalty: Float!
  rafikidesc: String! @index(name: "ShikaDesc", sortKeyFields: ["createdAt"], queryField: "PataByDesc")
  rafikiprcntg: Float! 
  rafikirpymntperiod: Float!
  
  owner: String! 
  
  createdAt: String!
}

type Agent
  @model
  @auth(
    rules: [
      { allow: private, operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      { allow: groups, groups: ["RegionalAdminTwo"], operations: [read] }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update, delete] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      { allow: groups, groups: ["KFKubwa"], operations: [read, update] }
      { allow: groups, groups: ["KFNdogo"], operations: [read, create, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  
  
  {
  phonecontact: String! @primaryKey
  sagentregno: String! @index(name: "byCrtnTyms", sortKeyFields: ["createdAt"], queryField: "MFKVwMFN")
  nationalid: String! @index(name: "byNatIdentitys", sortKeyFields: ["createdAt"], queryField: "VwNatIdentitys")
  name: String!
  ttlEarnings: Float!
  pw: String!
  email: String!
  
  TtlFltIn: Float!
  TtlFltOut: Float!
  floatBal: Float!
  latitude: Float!
  longitude: Float!
  agentEarningBal: Float!
  status: Status!
  bankName:String!
  bkAcNo:String!
  owner: String!
  town:String!
  MFNWithdrwlFee:Float!
  createdAt: String!
  
}



type FloatPurchase
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["BankAdmin"], operations: [create, read] }
      { allow: groups, groups: ["KFNdogo"], operations: [create, update, read] }
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [read, update, create] }
     
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  {

  agentphone: String! @index(name: "byMFNFlt", sortKeyFields: ["createdAt"], queryField: "VwMyBghtFlt")
  amount: Float!
  transactId: String! @primaryKey
  bankAdminID: String!
  status: Status!
  owner: String!
  createdAt: String!
}

type FloatAdd
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["KFNdogo"], operations: [read] }
    ]
  )
  
 
  
  {
    id:ID!
  withdrawerid: String! @index(name: "byWthdrwrPhn", sortKeyFields: ["createdAt"], queryField: "VwMyUsrWthdrwls")
 
  amount: Float!
  agentPhonecontact: String!  @index(name: "byMFNPhn", sortKeyFields: ["createdAt"], queryField: "VwMFNFltAdds")
  agentName:String!
  userName:String!
  saName:String!
  saPhone:String! @index(name: "byMFKPhn", sortKeyFields: ["createdAt"], queryField: "VwMFKEarningsFrmWthdrwls")
  sagentId: String!
  status: Status!
  owner: String!
  createdAt: String!
}

type FloatReduction
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: owner, operations: [create, read, update] }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["KFNdogo "], operations: [read, create] }
      { allow: private, operations: [create, read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
 
  
  {
  id:ID!
  amount: Float!
  depositerid: String! @index(name: "byDpsiterPhn", sortKeyFields: ["createdAt"], queryField: "VwMyUsrDposits")
  agContact: String!  @index(name: "byMFNCntact", sortKeyFields: ["createdAt"], queryField: "VwMFNFltDeductns")
  agentName:String!
  userName:String!
  status: Status!
  createdAt: String!
}

type AgentWithdrawals
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update, create] }
      { allow: private, operations: [create, read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BankAdmin"], operations: [read, create] }
      { allow: groups, groups: ["KFNdogo "], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
 {
 id:ID!
  agentPhone: String! @index(name: "byMFNContact", sortKeyFields: ["createdAt"], queryField: "VwMFNWthdrwls")
  
  bankAdminId: String!
  bankName:String!
  bkAcNo:String!
  Amount: Float!
  status: Status!
  owner: String!
  createdAt: String!
}

type SAgent
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update, delete] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["KFNdogo"], operations: [read, update] }
      { allow: groups, groups: ["KFKubwa"], operations: [read, create, update] }
     
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      ]
  )

  
   {
  saPhoneContact: String! @primaryKey
  saNationalid: String! @index(name: "byNatIdentityss", sortKeyFields: ["createdAt"], queryField: "VwNatIdentityss")
  name: String!
  acChamp: String
  pw: String!
  TtlEarnings: Float!
  actvMFNdog: Float!
  cost: Float!
  costBal:Float!
  mfnTtl:Float!
  offerStatus:String!
  InctvMFNdog: Float!
  email: String!
  saBalance: Float!
  bankName:String!
  bkAcNo:String!
  status: Status!
  owner: String!
  MFKWithdrwlFee:Float!
  createdAt: String!
}



type SAgentWithdrawals
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create] }
      
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BankAdmin"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      {
        allow: groups
        groups: ["KFKubwa"]
        operations: [read, create, update]
      }
    ]
  )
  
  {
 
  id:ID!
  saId: String! @index(name: "byMFKContacts", sortKeyFields: ["createdAt"], queryField: "VwMFKWthdrwls")
  amount: Float!
  bankAdmnId: String!
  bankName:String!
  bkAcNo:String!
  status: Status!
  owner: String!
  createdAt: String!
}




type Personel
  @model
  @auth(
    rules: [
      { allow: private, operations: [read, update, create, delete] }
      { allow: owner, operations: [read, update, create, delete] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      { allow: groups, groups: ["RegionalAdminTwo"], operations: [read] }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update, delete] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      { allow: groups, groups: ["KFKubwa"], operations: [read, update] }
      
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  
  
  {
  phoneKontact: String! @index(name: "byCrtnTymmmms", sortKeyFields: ["createdAt"], queryField: "WrkrsVww")
  BusinessRegNo: String! @index(name: "byCrtnTymmms", sortKeyFields: ["createdAt"], queryField: "BusOwnrVwWrkrss")
  nationalid: String!
  BiznaName:String!
  name: String!
  ownrsss:String!
  email: String!
  workerId:String! @primaryKey
  workId:String!
  createdAt: String!
  
}

type Bizna
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      
      { allow: private, operations: [read, update, create, delete] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update, delete] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
     

      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }

      
      ]
  )

  
   {
  
  BusKntct: String! @primaryKey
  busName: String! @index(name: "byCrtnTymmmmms", sortKeyFields: ["createdAt"], queryField: "BiznaVwws")
  pw: String!
  TtlEarnings: Float!
  earningsBal:Float!
  bizBeneficiary:String!
  netEarnings:Float!
  owner2email:String
  email: String!
  licenseNo: String!
  bizType: String! 
  status:String!
  owner: String!
  description:String!
  createdAt: String!
  noBL: Float!
  TtlActvLonsTmsLnrCredSlsB2B: Float!
            TtlActvLonsAmtLnrCredSlsB2B: Float!
            TtlBLLonsTmsLnrCredSlsB2B: Float!
            TtlBLLonsAmtLnrCredSlsB2B: Float!
            TtlClrdLonsTmsLnrCredSlsB2B: Float!
            TtlClrdLonsAmtLnrCredSlsB2B: Float!
            TtlActvLonsTmsLneeCredSlsB2B: Float!
            TtlActvLonsAmtLneeCredSlsB2B: Float!
            TtlBLLonsTmsLneeCredSlsB2B: Float!
            TtlBLLonsAmtLneeCredSlsB2B: Float!
            TtlClrdLonsTmsLneeCredSlsB2B: Float!
            TtlClrdLonsAmtLneeCredSlsB2B: Float!
          
            TtlActvLonsTmsLnrCredSlsB2P: Float!
            TtlActvLonsAmtLnrCredSlsB2P: Float!
            TtlBLLonsTmsLnrCredSlsB2P: Float!
            TtlBLLonsAmtLnrCredSlsB2P: Float!
            TtlClrdLonsTmsLnrCredSlsB2P: Float!
            TtlClrdLonsAmtLnrCredSlsB2P: Float!
            TtlActvLonsTmsLneeCredSlsP2B: Float!
            TtlActvLonsAmtLneeCredSlsP2B: Float!
            TtlBLLonsTmsLneeCredSlsP2B: Float!
            TtlBLLonsAmtLneeCredSlsP2B: Float!
            TtlClrdLonsTmsLneeCredSlsP2B: Float!
            TtlClrdLonsAmtLneeCredSlsP2B: Float!
            
            objectionStatus:String!
            objOfficer: String!
            objReason: String!
            AdminNo:Float!
            Admin1:String!
            Admin2:String!
            Admin3:String!
            Admin4:String!
            Admin5:String!
            Admin6:String!
            Admin7:String!
            Admin8:String!
            Admin9:String!
            Admin10:String!
            Admin11:String!
            Admin12:String!
            Admin13:String!
            Admin14:String!
            Admin15:String!
            Admin16:String!
            Admin17:String!
            Admin18:String!
            Admin19:String!
            Admin20:String!
            Admin21:String!
            Admin22:String!
            Admin23:String!
            Admin24:String!
            Admin25:String!
            Admin26:String!
            Admin27:String!
            Admin28:String!
            Admin29:String!
            Admin30:String!
            Admin31:String!
            Admin32:String!
            Admin33:String!
            Admin34:String!
            Admin35:String!
            Admin36:String!
            Admin37:String!
            Admin38:String!
            Admin39:String!
            Admin40:String!
            Admin41:String!
            Admin42:String!
            Admin43:String!
            Admin44:String!
            Admin45:String!
            Admin46:String!
            Admin47:String!
            Admin48:String!
            Admin49:String!
            Admin50:String!
}





type BankAdmin
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      
      { allow: private, operations: [read, update] }
      {
        allow: groups
        groups: ["AdminOneTwo"]
        operations: [read, update, create]
      }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, delete, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update, delete] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      {
        allow: groups
        groups: ["KFNdogo"]
        operations: [read, update]
      }

      
      {
        allow: groups
        groups: ["Advocate"]
        operations: [read, update]
      }
      {
        allow: groups
        groups: ["KFKubwa"]
        operations: [read, update]
      }
    ]
  )
   {
  nationalid: String! @primaryKey
  name: String!
  phonecontact: String!
  TtlEarnings: Float!
  pw: String!
  BankAdmBal: Float!
  email: String!
  status: Status!
  owner: String!
  createdAt: String!
}



type Advocate
  @model
  @auth(
    rules: [
      { allow: private, operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update, delete] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      {
        allow: groups
        groups: ["Advocate"]
        operations: [create, update, read]
      }
    ]
  )
  {
  advregnu: String! @primaryKey 
  nationalid: String! 
  pwd: String!
  name: String!
  phonecontact: String! @index(name: "byAdvCov", sortKeyFields: ["createdAt"], queryField: "srchAdvCovLns")
  TtlEarnings: Float!
  advBal: Float!
  email: String!
  bankName:String!
  bkAcNo:String!
  officeLoc: String!
  status: Status!
  owner: String!
  createdAt: String!
}

type AdvocateWithdrawals
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["BankAdmin"], operations: [create, read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: owner, operations: [read, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["Advocate"], operations: [read, create] }
    ]
  )
  
  {
  id:ID!
  bankAdmnId: String!
  advregnu: String!  @index(name: "byAdvContacts", sortKeyFields: ["createdAt"], queryField: "VwAdvWthdrwls")
  amount: Float!
  bankName:String!
  bkAcNo:String!
  status: Status!
  owner: String!
  createdAt: String!
}

type Company
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: private, operations: [read, update] }
      { allow: owner, operations: [read, update, create] }
    ]
  )
  
  {
  AdminId: String! @primaryKey 
  phoneContact: String!
  companyEmail: String!
  termsNconditions: String!
  alert: String!
  about: String!
  policy: String!
  privacy: String!
  recom: String!
  pw1: String!
  pw2: String!
  agentwithdrawalFee: Float!
  agentCom: Float!
  sagentCom: Float!
  companyCom: Float!
  AdvCom: Float!
  ChampCom: Float!
  AdvCompanyCom: Float!
  bankAdminCom: Float!
  sawithdrawalFee: Float!
  advuserwithdrawalFee: Float!
  bankAdmuserwithdrawalFee: Float!
  userLoanTransferFee: Float!
  userTransferFee: Float!
  chmMmbrTransferFee: Float!
  chmTransferFee: Float!
  biznaTransferFee: Float!
  palpalLnRpymntFee: Float!
  chmLnRpymntFee: Float!
  crdSllrLnRpymntFee: Float!
  biznaCredSaleFee:Float
  biznaCashSaleFee: Float
  dfltWaiverFee:Float
  tenderingFee: Float
  EmploymentFee: Float  
  userClearanceFee: Float!
  CoverageFee: Float!
  vat:Float!
  ttlvat:Float! 
  enquiryFee: Float!
  UsrWthdrwlFees: Float!
  ttlNonLonssRecSM: Float!
  ttlNonLonssSentSM:Float!
  ttlNonLonssRecChm: Float!
  ttlNonLonssSentChm:Float!
  companyEarningBal: Float!
  companyEarning: Float!
  agentEarningBal: Float!
  agentEarning: Float!
  saEarningBal: Float!
  saEarning: Float!
  AdvEarningBal: Float!
  AdvEarning: Float!
  admEarningBal: Float!
  admEarning: Float!
  ttlUsrDep: Float!
  ttlUserWthdrwl: Float
  agentFloatIn: Float!
  agentFloatOut: Float!
  ttlActiveUsers: Float!
  ttlInactvUsrs: Float!
  ttlBLUsrs: Float!
  ttlActiveChm: Float!
  ttlInactvChm: Float!
  ttlBLChm: Float!
  ttlActiveChmUsers: Float!
  ttlInactvChmUsrs: Float!
  ttlBLChmUsrs: Float!  
  ttlKFNdgActv: Float!
  ttlKFNdgInActv: Float!
  ttlKNdgBLStts: Float!
  ttlKFKbwActv: Float!
  ttlKFKbwInActv: Float!
  ttlKKbwBLStts: Float!
  ttlKFAdvActv: Float!
  ttlKFAdvInActv: Float!
  ttlKAdvBLStts: Float!
  ttlKFAdmActv: Float!
  ttlKFAdmInActv: Float!
  ttlKAdmBLStts: Float!
  ttlSMLnsInAmtCov: Float!
  ttlChmLnsInAmtCov: Float!
  ttlSellerLnsInAmtCov: Float!
  ttlSMLnsInActvAmtCov: Float!
  ttlChmLnsInActvAmtCov: Float!
  ttlSellerLnsInActvAmtCov: Float!
  ttlSMLnsInClrdAmtCov: Float!
  ttlChmLnsInClrdAmtCov: Float!
  ttlSellerLnsInClrdAmtCov: Float!
  ttlSMLnsInBlAmtCov: Float!
  ttlChmLnsInBlAmtCov: Float!
  ttlSellerLnsInBlAmtCov: Float!  
  ttlSMLnsInTymsCov: Float!
  ttlChmLnsInTymsCov: Float!
  ttlSellerLnsInTymsCov: Float!
  ttlSMLnsInActvTymsCov: Float!
  ttlChmLnsInActvTymsCov: Float!
  ttlSellerLnsInActvTymsCov: Float!
  ttlSMLnsInClrdTymsCov: Float!
  ttlChmLnsInClrdTymsCov: Float!
  ttlSellerLnsInClrdTymsCov: Float!
  ttlSMLnsInBlTymsCov: Float!
  ttlChmLnsInBlTymsCov: Float!
  ttlSellerLnsInBlTymsCov: Float!  
  ttlCompTrnsfrEarningsCov: Float!
  ttlCompBLClrncEarningsCov: Float!
  ttlSMLnsInAmtNonCov: Float!
  ttlChmLnsInAmtNonCov: Float!
  ttlSellerLnsInAmtNonCov: Float!
  ttlSMLnsInActvAmtNonCov: Float!
  ttlChmLnsInActvAmtNonCov: Float!
  ttlSellerLnsInActvAmtNonCov: Float!
  ttlSMLnsInClrdAmtNonCov: Float!
  ttlChmLnsInClrdAmtNonCov: Float!
  ttlSellerLnsInClrdAmtNonCov: Float!
  ttlSMLnsInBlAmtNonCov: Float!
  ttlChmLnsInBlAmtNonCov: Float!
  ttlSellerLnsInBlAmtNonCov: Float!
  
  ttlSMLnsInTymsNonCov: Float!
  ttlChmLnsInTymsNonCov: Float!
  ttlSellerLnsInTymsNonCov: Float!
  ttlSMLnsInActvTymsNonCov: Float!
  ttlChmLnsInActvTymsNonCov: Float!
  ttlSellerLnsInActvTymsNonCov: Float!
  ttlSMLnsInClrdTymsNonCov: Float!
  ttlChmLnsInClrdTymsNonCov: Float!
  ttlSellerLnsInClrdTymsNonCov: Float!
  ttlSMLnsInBlTymsNonCov: Float!
  ttlChmLnsInBlTymsNonCov: Float!
  ttlSellerLnsInBlTymsNonCov: Float!
  
  ttlCompTrnsfrEarningsNonCov: Float!
  ttlCompBLClrncEarningsNonCov: Float!
  ttlCompCovEarnings: Float!

  maxInterestSM: Float!

  maxInterestPwnBrkr: Float!
  maxInterestCredSllr: Float!
  maxInterestGrp: Float!

  maxMFNdogos:Float!
  maxBLs:Float!

  owner:String! 
  totalLnsRecovered: Float!
  createdAt: String!
  MFNdogoTC: String!
  MFKubwaTC: String!
  AdvocateTC:String!
  BiznaTNC:String
  ChamaTNC:String
  PayPalTNC:String
  maxDfltPen: Float!
  bizBLNo: Float
}

type Group
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [read, update, create, delete] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
     
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )  
  
  {
  grpContact: String! @primaryKey
  regNo:String!
  signitoryContact: String!
  SignitoryNatid: String! @index(name: "byNatIdentitysz", sortKeyFields: ["createdAt"], queryField: "VwNatIdentitysz")
  signitoryName: String!
  grpName: String!
  signitoryPW: String!
  oprtnArea:String! @index(name: "byChmArea", sortKeyFields: ["createdAt"], queryField: "ViaChmArea")
  venture: String! @index(name: "byChmVenture", sortKeyFields: ["createdAt"], queryField: "ViaChmVenture")
  signitory2Sub: String!
  WithdrawCnfrmtn: String!
   WithdrawCnfrmtnAmt: Float!
  
  grpEmail: String!
  grpBal: Float!
  ttlGrpMembers: Float!
  description: String
  withdrwlAmt: Float
  ChmBenefits:Float!
                  subscriptionFrequency: Float!
                  subscriptionAmt: Float!
                  lateSubscriptionPenalty:Float!
                  objectionStatus:String!
                  objOfficer: String!
                  objReason: String!
                  AdminNo:Float!
                  Admin1:String!
                  Admin2:String!
                  Admin3:String!
                  Admin4:String!
                  Admin5:String!
                  Admin6:String!
                  Admin7:String!
                  Admin8:String!
                  Admin9:String!
                  Admin10:String!
                  Admin11:String!
                  Admin12:String!
                  Admin13:String!
                  Admin14:String!
                  Admin15:String!
                  Admin16:String!
                  Admin17:String!
                  Admin18:String!
                  Admin19:String!
                  Admin20:String!
  ttlNonLonsRecChm: Float!
  ttlNonLonsSentChm:Float!

  ttlDpst: Float!
  ttlWthdrwn: Float!

  tymsChmHvBL:Float!
  

  TtlActvLonsTmsLnrChmCov: Float!
  TtlActvLonsAmtLnrChmCov: Float!
  TtlBLLonsTmsLnrChmCov: Float!
  TtlBLLonsAmtLnrChmCov: Float!
  TtlClrdLonsTmsLnrChmCov: Float!
  TtlClrdLonsAmtLnrChmCov: Float!

  TtlActvLonsTmsLnrChmNonCov: Float!
  TtlActvLonsAmtLnrChmNonCov: Float!
  TtlBLLonsTmsLnrChmNonCov: Float!
  TtlBLLonsAmtLnrChmNonCov: Float!
  TtlClrdLonsTmsLnrChmNonCov: Float!
  TtlClrdLonsAmtLnrChmNonCov: Float!  
  status: Status!
  owner: String!
  createdAt: String!
}

type ChamaMembers
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [update, read, create, delete] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
     
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  ) 
 

 
  {

  MembaId:String! @index(name: "byChmNMmbr", sortKeyFields: ["createdAt"], queryField: "ViaChmNMmbr")
  groupContact: String! @index(name: "byChmCntcts", sortKeyFields: ["createdAt"], queryField: "VwChamaMembers")
  regNo:String!
  ChamaNMember:String!  @primaryKey
  groupName: String!
  memberContact: String!   @index(name: "byMemberCntcts", sortKeyFields: ["createdAt"], queryField: "VwMyChamas")
  memberName:String!
  memberNatId: String!
  memberChmBenefit:Float!
  timeCrtd:Float!
  subscribedAmt:Float!
  totalSubAmt:Float!
  ttlLateSubs:Float!
  GrossLnsGvn:Float!
  LonAmtGven: Float!
  AmtRepaid:Float!
  LnBal: Float!
  NonLoanAcBal:Float!
  ttlNonLonAcBal: Float!
  AcStatus: Status!
  loanStatus: Status!
  blStatus: Status!
  owner: String!
  createdAt: String!
  subscriptionFrequency: Float!
  subscriptionAmt: Float!
  lateSubscriptionPenalty:Float!
}

type ChamasNPwnBrkrs
  @model
  @auth(
    rules: [
      
      { allow: private, operations: [read, create, update] }
      
    ]
  ) 
 
  {
 id:ID!
  contact: String! @index(name: "viaphones", sortKeyFields: ["createdAt"], queryField: "VwViaPhons")
  regNo: String!  @index(name: "viaRegNo", sortKeyFields: ["createdAt"], queryField: "VwViaRegNo")  
  AcStatus: Status!  
  owner: String!
  createdAt: String!
}



type GroupNonLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  
  
  {
  
  id:ID!
  grpContact: String! @index(name: "byChmCntctssss", sortKeyFields: ["createdAt"], queryField: "VwChamaMemberssss")
  recipientPhn: String! @index(name: "byMemberCntctssss", sortKeyFields: ["createdAt"], queryField: "VwMyChamassss")
  receiverName:String!
  SenderName:String!
  amountSent: Float!
  memberId:String!
  description: String
  status: Status!
  owner: String!
  createdAt: String!
}

type GrpMembersContribution
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  

  {
  id:ID!
  memberPhn: String!   @index(name: "byMemberCntctsssss", sortKeyFields: ["createdAt"], queryField: "VwMyChamasssss")
  mmberNme:String!
  GrpName:String!
  grpContact: String! @index(name: "byChmCntctsssss", sortKeyFields: ["createdAt"], queryField: "VwChamaMembersssss")
  contriAmount: Float!
  memberId:String!
  status: Status!
  owner: String!
  createdAt: String!
}

type ReqLoan
  @model
  @auth(
    rules: [
      { allow: owner, operations: [delete, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  

  {
  id:ID!
  loaneeEmail: String! @index(name: "byLoaneeEml", sortKeyFields: ["createdAt"], queryField: "VwMyLoaneeReq")
  loanerEmail: String! @index(name: "byLoanerEmls", sortKeyFields: ["createdAt"], queryField: "VwLoaneeReq")
  loaneePhone:String!
  loaneeName: String!
  AdvEmail: String
  advLicNo: String
  loanerName: String!
  loanerPhone: String!
dfltDeadLn: Float!
  amount:Float!
  repaymentAmt: Float! 
  repaymentPeriod: Float!
  lnType: String!
  status: Status!
  owner: String!
  createdAt: String!
  statusNumber: Float!
  description: String
  defaultPenalty: Float!
  installmentAmount:Float!
  paymentFrequency:Float!
}


type ReqLoanChama
  @model
  @auth(
    rules: [
      { allow: owner, operations: [delete, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  

  {
  id:ID!
  loaneeEmail: String! @index(name: "ChmaLnee", sortKeyFields: ["createdAt"], queryField: "ByChmaLnee")
  chamaPhone: String! @index(name: "ChmaNoDesc", sortKeyFields: ["createdAt"], queryField: "ByChmaNoDesc")
  loaneePhone:String!
  loaneeName: String!
  advLicNo: String
  dfltDeadLn: Float!
  amount:Float!
  repaymentAmt: Float! 
  repaymentPeriod: Float!
  status: Status!
  owner: String!
  lnType: String!
  loaneeMemberId: String!
  createdAt: String!
  statusNumber: Float!
  AdvEmail: String
  loanerName: String!
  loanerPhone: String!
  description: String
  defaultPenalty: Float!
  installmentAmount:Float!
  paymentFrequency:Float!
}


type ReqLoanCredSl
  @model
  @auth(
    rules: [
      { allow: owner, operations: [delete, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  

  {
  id:ID!
  loaneeEmail: String! @index(name: "BzLnee", sortKeyFields: ["createdAt"], queryField: "ByBzLnee")
  businessNo: String! @index(name: "BzNoDesc", sortKeyFields: ["createdAt"], queryField: "ByBzNoDesc")
  loaneePhone:String!
  loaneeName: String!
  itemName: String!
  amount:Float!
  dfltDeadLn: Float!
  repaymentAmt: Float! 
  repaymentPeriod: Float!
  status: Status!
  owner: String!
  createdAt: String!
  statusNumber: Float!
  lnType: String!
  AdvEmail: String
  advLicNo: String
  loanerName: String!
  loanerPhone: String!
  description: String
  defaultPenalty: Float!
  installmentAmount:Float!
  paymentFrequency:Float!
}

type ExRates
  @model
  @auth(
    rules: [
      { allow: owner, operations: [delete, read, update] }
      { allow: private, operations: [read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, update]
      }
      
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  

  {
  cur:String! @primaryKey
  sellingPrice: Float! 
  buyingPrice: Float! 
  symbol:String! @index(name: "BzNoDescszxc", sortKeyFields: ["createdAt"], queryField: "ByBzNoDescsxzc")  
  createdAt: String!
}

type MFKOfferz
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete, read, update] }
      { allow: private, operations: [read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, update]
      }
      { allow: groups, groups: ["KFKubwa"], operations: [read, create, update] }
     
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )  

  {
  id:ID!
  offerStatus: String! 
  acCost: Float! 
  amtPaid:Float!
  mfnOffered: Float!
  acChamp: String!
  mfnReg: Float!
  status:Status! 
  mfkAc: String! @index(name: "MFKOffer", sortKeyFields: ["createdAt"], queryField: "MFKOffers")
  acMainAc: String!
  createdAt: String!  
}

type MFKOfferz2
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete, read, update] }
      { allow: private, operations: [read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, update]
      }
      { allow: groups, groups: ["KFKubwa"], operations: [read, create, update] }
     
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )  

  {
  id:ID!
  offerStatus: String! 
  acCost: Float! 
  amtPaid:Float!
  mfnOffered: Float!
  acChamp: String!
  mfnReg: Float!
  status:Status! 
  mfkAc: String! @index(name: "MFKOffer2", sortKeyFields: ["createdAt"], queryField: "MFKOffers2")
  acMainAc: String!
  createdAt: String!  
}

enum Status {
  NoLoan
  LoanActive
  LnWitnessed
  LoanInActive
  LoanCleared
  LoanBL
  AccountActive
  AccountInactive
  AccountBlackListed
  AccountNotBL
  SMNonLons
  ChmMbrGrpContri
  ChmSndMbr
  SMLonRepayment
  cashSales
  ChmLonRepayment
  biznaDeposits
  biznaWithdrawals
  Biz2Biz
  Biz2Pal
  Pal2Biz
  Pal2Pal
  Yes
  No
  Waived
  Forfeited
  Sold
  CredSlrLonRepayment
  AwaitingResponse
  Approved
  Declined
  TransactionRev
  BiznaShare
  Objected
  NotObjected
  Nothing
  Nothing2
}

eyJpZFRva2VuIjp7Imp3dFRva2VuIjoiZXlKcmFXUWlPaUphVG1Vd2JFUkdSRGgxZGtOd1MwNWlSRE5pUlZWRlVFdFVla3g1VUN0UmVraFhTbGgyYm5adlMxcHpQU0lzSW1Gc1p5STZJbEpUTWpVMkluMC5leUp6ZFdJaU9pSmtOR1k0WmpSbU9DMWxNRFl4TFRjd1pqVXRaR0kzTXkweE1tRm1ZVFkxWW1Nd1lqSWlMQ0pqYjJkdWFYUnZPbWR5YjNWd2N5STZXeUpHZFd4c0xXRmpZMlZ6Y3lKZExDSmpiMmR1YVhSdk9uQnlaV1psY25KbFpGOXliMnhsSWpvaVlYSnVPbUYzY3pwcFlXMDZPamczTURNNU5UTTFPVEF6TXpweWIyeGxYQzkxY3kxbFlYTjBMVEZmYlZCalVWUTJhMHhCWDBaMWJHd3RZV05qWlhOeklpd2lhWE56SWpvaWFIUjBjSE02WEM5Y0wyTnZaMjVwZEc4dGFXUndMblZ6TFdWaGMzUXRNUzVoYldGNmIyNWhkM011WTI5dFhDOTFjeTFsWVhOMExURmZiVkJqVVZRMmEweEJJaXdpWTI5bmJtbDBienAxYzJWeWJtRnRaU0k2SW1GM2N5MWhiWEJzYVdaNUxXRmtiV2x1SWl3aWIzSnBaMmx1WDJwMGFTSTZJbVkyTm1JeFlqVTBMVEF3T1RFdE5HVmxNeTFoTnprekxUWTFOalV3TWprMFkyVTNZU0lzSW1OdloyNXBkRzg2Y205c1pYTWlPbHNpWVhKdU9tRjNjenBwWVcwNk9qZzNNRE01TlRNMU9UQXpNenB5YjJ4bFhDOTFjeTFsWVhOMExURmZiVkJqVVZRMmEweEJYMFoxYkd3dFlXTmpaWE56SWwwc0ltRjFaQ0k2SWpjNVpHOXlZMkkwYUc0eE5XNWhjR1E0TkdoMGJqbG5NVEF6SWl3aVpYWmxiblJmYVdRaU9pSTRZMkptTW1ZMVlpMDFZMlU0TFRReU1UTXRZbU5pWVMwNE5EQXpZVEl4TmpaaE9XRWlMQ0owYjJ0bGJsOTFjMlVpT2lKcFpDSXNJbUYxZEdoZmRHbHRaU0k2TVRjeU5UTTJNemt3T1N3aVpYaHdJam94TnpJMk56VXdORGN4TENKcFlYUWlPakUzTWpZM016QTJOekVzSW1wMGFTSTZJbVZrTURreVpEUmtMVFl3WkRJdE5HSTVNeTA0WlRnM0xUSXpaalEyWkRrMFpUQXpNQ0o5LllHMkxvMGwxT19xYnhFSEJpTVZkN05QZkoyVzFiWElBVGFJMVNrbDcwV0V2eFNkOU5lMWJOX0VvckVPTExOYXZ6em5kOF91aXFManJRZ1RFWWV0SFdYUmNXaXJNNUw0aWRQazRQcFlDVnBVdzVCRXZNQUN2bkM2WHZlMkVhdUpPVllOckx3U2NjOW82bDBvWnRta0ZPbHItQWZ1ZVRDREZLN1pQWTAxZV96S3pUUThVcFVjV3NIbUNReExBMFk0cFl2dkNFa3plQWh5M2RuUS1Pal9tZ0xYcVVTbkZRS1I1VXcxSURxRmVMOHFrN3JTTl9janVzTmpITXgxVDV3UHl1aHJDZGZFV0Rtc3FDMGVWZ09sZEJ1cEplb0RvTDc0YnMyckc0U0dteUZvVjZOaXk4alI5ZmtTU3ZpMmctbjJHWHo4cUdVU0stRzUxT2F0eThVU3h3USIsInBheWxvYWQiOnsic3ViIjoiZDRmOGY0ZjgtZTA2MS03MGY1LWRiNzMtMTJhZmE2NWJjMGIyIiwiY29nbml0bzpncm91cHMiOlsiRnVsbC1hY2Nlc3MiXSwiY29nbml0bzpwcmVmZXJyZWRfcm9sZSI6ImFybjphd3M6aWFtOjo4NzAzOTUzNTkwMzM6cm9sZS91cy1lYXN0LTFfbVBjUVQ2a0xBX0Z1bGwtYWNjZXNzIiwiaXNzIjoiaHR0cHM6Ly9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS91cy1lYXN0LTFfbVBjUVQ2a0xBIiwiY29nbml0bzp1c2VybmFtZSI6ImF3cy1hbXBsaWZ5LWFkbWluIiwib3JpZ2luX2p0aSI6ImY2NmIxYjU0LTAwOTEtNGVlMy1hNzkzLTY1NjUwMjk0Y2U3YSIsImNvZ25pdG86cm9sZXMiOlsiYXJuOmF3czppYW06Ojg3MDM5NTM1OTAzMzpyb2xlL3VzLWVhc3QtMV9tUGNRVDZrTEFfRnVsbC1hY2Nlc3MiXSwiYXVkIjoiNzlkb3JjYjRobjE1bmFwZDg0aHRuOWcxMDMiLCJldmVudF9pZCI6IjhjYmYyZjViLTVjZTgtNDIxMy1iY2JhLTg0MDNhMjE2NmE5YSIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNzI1MzYzOTA5LCJleHAiOjE3MjY3NTA0NzEsImlhdCI6MTcyNjczMDY3MSwianRpIjoiZWQwOTJkNGQtNjBkMi00YjkzLThlODctMjNmNDZkOTRlMDMwIn19LCJyZWZyZXNoVG9rZW4iOnsidG9rZW4iOiJleUpqZEhraU9pSktWMVFpTENKbGJtTWlPaUpCTWpVMlIwTk5JaXdpWVd4bklqb2lVbE5CTFU5QlJWQWlmUS5lVEd0QzdtRVhmc3h6S29IM0ljcjhDVmdxNmgyQndES1JfemRCSDVWdzZOd2F6akpCVHFxR3BReWR0d3pta0paajZ4QVlLbTBEajNSazBZOGZNT3ZjdjdrUkhXeUpYX1dQaGtYVkRDdmFTTF9PSTR2Y1pvTWROSVBwRHZ6T25Rb0lUNzhRYU56OXF6WC1XOFBWN1BuNkFhbDB2NGc5VWdFc3ZYS1dmS3VuLU9icTJzNnFZd0ZwV2J5WDl2WXVpalZmcE9lYTQwSm91RFVIMDZHWHRBeXZJLV9YM1lDTlRXamctRk5idFJEakNFLWtrUEdvWWU5WmM5MFBtYy1HZGtfczdnUlhfRFQ2a2k2R3ZXNnI2R2V0TXZGME8yc19QcC01c1V4d1dXaEVFalJudDRyLUg5dWtGbko2ZGlvT2FaWjZHdS1sWnZCaXk4VVcybmRXcGNsZEEuV1ZWaGJ2Wmh4enV2N285ay41MkM5QV8tTm1pT2xZRERNZEVuOXpqU1FhMEVXRHNHR1ZySE1ZNE9ETEktdDAyMTktcjE4QkxzUlFfaW56M1Y5ZmJhZ1U0YVZqdGNPSnVhRGc4VzhiYWVyOGhHa0hRTkRRNHhUS2lXcGRJRnJWUlNGbHQ5THpaNTQyeHZuTjhSOUdCY1pBdGZxY1E1VTZfaDFZTVdxQTlHeFpaOWhBcTVGWXN2RWpuZ3EyMTJRa1VHcjFIc3ZnS0QzUi1hcFFuWWVCRlBNS2FNa3ZQdXl0TkZWTkY5ZVRrTnY4RzlpLVg0WjdDUjVyV2tDUXpXckl5RzZ1LXZ5Z2NOQk52T1VySUVRYzRTV3ZWZmEtWUVRSDcwQU1KQ2d2cG84Q2NOenJiV3MyMXVSODQ0Uzk4NThROXF6b2x6b21TUWJMMUlKM3RRR25DRko3UU12aHp0TS1yLVhiNHBHNUhxY0YzME1kLTgyZFZxeXlLaEtCTmF2enQzM2lYUm9yZFpZMlVxOW5oQ2VSSmxsOUVENjhmdmNNbzlIc0U2QVFHeFY1N2xMdXRxZVJ1ZXhYMUlGSmkwWGRtUU9tVlAxNllmZUk3UnRqM0tMSVhEampVZHFXNjNSQVR5R3RzZHNwbkhiY1lHa19tM3FqNXBwN1Q5dmFJVmhoSEh0a05qNnlGaUllRzhVcWNrZFRvT1NGOG1iMnctLXg3ZC1UZ2o0R2Y4ZG5veWt0MlFuNmU1TjBlSUdjTHA3MmViZEhpci1iM3JxbElNS0NXamc1QlI0cG5kcHU2YkE3WFRLZUM5OVg0bFg5ZS1BRl9tM2liNy1OS1R0SUV5a2lBSkI5bkJLZlFFdW5JMlN6WEh3Vm5ybXZ1YlpFajZveHhKTFBTNDFLbnBCMUotd3kxQm1aa3NiR2FTMzlyTzBwWHB4QkNYdU01SDhaX3ZTanFHblhRS2tQWEF3aWU0RFpnX2VKX1JlNXBEUWRlTTR2ZXlIZ3Jxc2VhSlU5Z3lzSmU0YzhEbHFldWNnVGVleHhXczlsSjZUT0sxazFfTDNHa0JtQ3NlbGE5OVY5dWlub2NwZ2kzRUZkbDhnTzBDdmtBbEtqQ2hkMGJzREtQX2VjdU4wajJQQlpzbEZhdlFrUVJ6Ym9RMmFPS056U0dNTE1pR3FmTFNabHJxZldZcFF5VzVkSXVoYlFjV1ZnLTJMN2pwYkxKMExxaktDTWoxLTRERnJqZ3hYYVlYVEFZWF9BbDNTSmFyQVpnbnJDUVBfMl92NjFKRjFLMDNZLUZlLUJEWU9obng5N25Za1Jkck93aGtzZzc0aWppT0pCdWRzaWt1ZXdjcU9vRVRlZjJIeVI0TDduVW5FV2ZLT2NtUndiTlpNZUs5WXhYZmpVNjcydWFNU191aFNUQk5UbExRSEp6dnE5a2lGUmRwbHZrTHVGSHVWYzlqSHRuT2RtZVJPcWxZNEN2TVk3Y1Atbm04SGZRSTNiSklvQ1o4STZpRER3QmgxLTNMdG1IMTRHZjFYQnRzbWlhcEo2WkQ2Nkt4WVpybzhuRG9TNndtSHUwcHM2TTBzc2FVZjl6NzU1UDg4c1VZckdSQWVrRXF3c1BIMkZ4dFNMVEJJdkVxVTBYeUkzWDE5OHFvTnF3aXBfZEI0czZocFJ3dFRDYnJfakx1UERqR1FuSV9lTXVxYVdpOTVuWWVtZGUxMGdHMlcyT3h0WWhEd0hCYVNFSkNlREpCd2FYMVc0VDk1WWRXTHNnLlA2TFNYTm9VbFFFcWJHZ19OS3JlbEEifSwiYWNjZXNzVG9rZW4iOnsiand0VG9rZW4iOiJleUpyYVdRaU9pSTJPVlJYV1dSMlQyOVlSbHd2ZGxvclZXaGxjbVU0TTNwSFRuZFNkMk50TlVKdllXUXJUVGxsYUcxSmF6MGlMQ0poYkdjaU9pSlNVekkxTmlKOS5leUp6ZFdJaU9pSmtOR1k0WmpSbU9DMWxNRFl4TFRjd1pqVXRaR0kzTXkweE1tRm1ZVFkxWW1Nd1lqSWlMQ0pqYjJkdWFYUnZPbWR5YjNWd2N5STZXeUpHZFd4c0xXRmpZMlZ6Y3lKZExDSnBjM01pT2lKb2RIUndjenBjTDF3dlkyOW5ibWwwYnkxcFpIQXVkWE10WldGemRDMHhMbUZ0WVhwdmJtRjNjeTVqYjIxY0wzVnpMV1ZoYzNRdE1WOXRVR05SVkRaclRFRWlMQ0pqYkdsbGJuUmZhV1FpT2lJM09XUnZjbU5pTkdodU1UVnVZWEJrT0RSb2RHNDVaekV3TXlJc0ltOXlhV2RwYmw5cWRHa2lPaUptTmpaaU1XSTFOQzB3TURreExUUmxaVE10WVRjNU15MDJOVFkxTURJNU5HTmxOMkVpTENKbGRtVnVkRjlwWkNJNklqaGpZbVl5WmpWaUxUVmpaVGd0TkRJeE15MWlZMkpoTFRnME1ETmhNakUyTm1FNVlTSXNJblJ2YTJWdVgzVnpaU0k2SW1GalkyVnpjeUlzSW5OamIzQmxJam9pWVhkekxtTnZaMjVwZEc4dWMybG5ibWx1TG5WelpYSXVZV1J0YVc0aUxDSmhkWFJvWDNScGJXVWlPakUzTWpVek5qTTVNRGtzSW1WNGNDSTZNVGN5TmpjMU1EUTNNU3dpYVdGMElqb3hOekkyTnpNd05qY3hMQ0pxZEdraU9pSTVNV0ptTmpZeFppMDFNMlJsTFRRMlpUUXRZVGxsWVMxaE1ESmlOelJtT0ROalptUWlMQ0oxYzJWeWJtRnRaU0k2SW1GM2N5MWhiWEJzYVdaNUxXRmtiV2x1SW4wLmdaU1pQT0I1MElDSUZiYjVaamtTeE9fQUQwOHdmeXBTOGxkUWxLZUtTd1hZQUgzbm5BTlRBbUwybkZXNnVpdnlaMnk1aHRyd0dIVm9rRlNDZm91SGRTOGRPZGtKblFjVm42cHJpR2dRM2Y3OHVxQWZ0M2hJMk9kTEg4aGxhOWtNV2cyYnBLamtFU3dKdk5lY2FWSDVBLVNDMGpkcU95N1FTbzhYTUgyS2lweHZlSUNXUTllT0lBRmFvMUpjVU1zNUlwR3FhUGlwQkR1MVRyX0ZNUnZ1V3J2MndTQWVMbHY4NGtkUFAwUnRUem5hVmZ3UGFIdXF2VDhPc2dhanBKRmR2RWZQWndxekNYazhRRFZkV2hyaFdqWEFIQjJXOXlQZXBjUFpzb0R4bVI4Q3RMTFhJaEcyLTJuMkFjdjRPbThfakIzVThJd1paeDlLa2lsWDdOTmhldyIsInBheWxvYWQiOnsic3ViIjoiZDRmOGY0ZjgtZTA2MS03MGY1LWRiNzMtMTJhZmE2NWJjMGIyIiwiY29nbml0bzpncm91cHMiOlsiRnVsbC1hY2Nlc3MiXSwiaXNzIjoiaHR0cHM6Ly9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS91cy1lYXN0LTFfbVBjUVQ2a0xBIiwiY2xpZW50X2lkIjoiNzlkb3JjYjRobjE1bmFwZDg0aHRuOWcxMDMiLCJvcmlnaW5fanRpIjoiZjY2YjFiNTQtMDA5MS00ZWUzLWE3OTMtNjU2NTAyOTRjZTdhIiwiZXZlbnRfaWQiOiI4Y2JmMmY1Yi01Y2U4LTQyMTMtYmNiYS04NDAzYTIxNjZhOWEiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzI1MzYzOTA5LCJleHAiOjE3MjY3NTA0NzEsImlhdCI6MTcyNjczMDY3MSwianRpIjoiOTFiZjY2MWYtNTNkZS00NmU0LWE5ZWEtYTAyYjc0ZjgzY2ZkIiwidXNlcm5hbWUiOiJhd3MtYW1wbGlmeS1hZG1pbiJ9fSwiY2xvY2tEcmlmdCI6MSwicmVnaW9uIjoidXMtZWFzdC0xIiwiSWRlbnRpdHlQb29sSWQiOiJ1cy1lYXN0LTE6YmNmM2ZjYjItYTgzMS00MjgyLWEwZTgtZjZiNWJjZTQ1NTcwIn0=
